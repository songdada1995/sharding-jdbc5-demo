# sharding
shardingsphere.datasource.sharding-demo.driver-class-name=com.mysql.cj.jdbc.Driver
shardingsphere.datasource.sharding-demo.url=jdbc:mysql://127.0.0.1:3306/demo?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
shardingsphere.datasource.sharding-demo.username=root
shardingsphere.datasource.sharding-demo.password=123456
shardingsphere.datasource.sharding-demo.max-active = 50
shardingsphere.datasource.sharding-demo.min-idle = 5
shardingsphere.datasource.sharding-demo.initial-size = 5
shardingsphere.datasource.sharding-demo.max-wait = 10000
shardingsphere.datasource.sharding-demo.validation-query = SELECT 1 FROM DUAL
shardingsphere.datasource.sharding-demo.test-while-idle = true
shardingsphere.datasource.sharding-demo.test-on-borrow = false
shardingsphere.datasource.sharding-demo.time-between-eviction-runs-millis = 20000
shardingsphere.datasource.sharding-demo.min-evictable-idle-time-millis = 30000
shardingsphere.datasource.sharding-demo.max-evictable-idle-time-millis = 60000
# The table of real nodes needs to be created. Otherwise, the primary key ID will not be generated
shardingsphere.rules.tables.t_report.actual-data-nodes=sharding-demo.t_report_$->{2024..2040}0$->{1..9},sharding-demo.t_report_$->{2024..2040}1$->{0..2}
shardingsphere.rules.tables.t_report.table-strategy.complex.sharding-column=in_account_period
shardingsphere.rules.tables.t_report.key-generate-strategy.column=id
shardingsphere.rules.tables.t_report.key-generate-strategy.key-generator-name=snowflake
shardingsphere.rules.binding-tables=t_report
shardingsphere.props.sql-show=true

# spring
spring.datasource.demo.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.demo.url=jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&&useSSL=false
spring.datasource.demo.username=root
spring.datasource.demo.password=123456
spring.datasource.demo.max-active = 50
spring.datasource.demo.min-idle = 5
spring.datasource.demo.initial-size = 5
spring.datasource.demo.max-wait = 10000
spring.datasource.demo.validation-query = SELECT 1 FROM DUAL
spring.datasource.demo.test-while-idle = true
spring.datasource.demo.test-on-borrow = false
spring.datasource.demo.time-between-eviction-runs-millis = 20000
spring.datasource.demo.min-evictable-idle-time-millis = 30000
spring.datasource.demo.max-evictable-idle-time-millis = 60000
